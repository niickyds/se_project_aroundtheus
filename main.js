!function(){"use strict";var e=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteIcon())),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteIcon(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}},t=class{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButton=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElement.every((e=>e.validity.valid))}_setEventListeners(){this._inputElement=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButton),this._inputElement.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}toggleButtonState(){this._hasInvalidInput(this._inputElement)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._popupCloseBtn=this._popupElement.querySelector(".modal__close"),this._popupImage=document.querySelector(".preview-image")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputItems=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputItems.forEach((t=>{e[t.name]=t.value})),e}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const o={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector(".profile__edit-button"),i=document.querySelector("#edit-modal"),a=(document.querySelector(".profile__title"),document.querySelector(".profile__text"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-text-input"),c=(i.querySelector(".modal__form"),document.querySelector(".profile__add-button")),u=document.querySelector("#card-modal"),m=(u.querySelector("#add-title-input"),u.querySelector("#add-url-input"),u.querySelector(".modal__form"),document.querySelector("#image-modal")),_=(m.querySelector(".preview-image"),m.querySelector(".modal__preview-text"),document.querySelector(".cards__list"),document.querySelector("#edit-form")),d=document.querySelector("#add-form"),p=new t(o,_),h=new t(o,d);p.enableValidation(),h.enableValidation();const v=new n("#card-modal",(function(e){const t=f(e);return y.addItem(t),v.close(),t}));v.setEventListeners();const E=new class{constructor(e,t){this._name=document.querySelector(e),this._about=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}}(".profile__title",".profile__text"),S=new n("#edit-modal",(e=>{E.setUserInfo(e),S.close()}));S.setEventListeners();const g=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".preview-image"),this._popupImageText=document.querySelector(".modal__preview-text")}open(e){this._popupImageText.textContent=e._name,this._popupImage.alt=e._name,this._popupImage.src=e._link,super.open()}}("#image-modal");g.setEventListeners();const y=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=f(e);y.addItem(t)}},".cards__list");function f(t){return new e(t,"#card-template",I).getView()}function I(e){g.open(e)}y.renderItems(),r.addEventListener("click",(()=>{const e=E.getUserInfo();a.value=e.name,l.value=e.about,S.open()})),c.addEventListener("click",(()=>{h.toggleButtonState(),v.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,